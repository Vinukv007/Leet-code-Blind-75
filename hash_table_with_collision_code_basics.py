# -*- coding: utf-8 -*-
"""Hash table with collision code basics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vtckvjQtBikGqE9kAVHRIMNFGohwKy29
"""

class hashtable:
  def __init__(self):
    self.max=100
    self.array=[[] for i in range(self.max)]

  def hashfunction(self, key):
    h=0
    for i in key:
      h+=ord(i)
    return h % self.max

  def __getitem__(self, key):
    h=self.hashfunction(key)
    for idx, element in enumerate(self.array[h]):
      if element[0]==key:
        return element[1]

  def __setitem__(self, key, value):
    h=self.hashfunction(key)
    found=False
    for idx, element in enumerate(self.array[h]):
      if element[0]==key:
        found=True
        self.array[h][idx]=(key, value)
        break
      
    if not found:
      self.array[h].append((key, value))

  def __delitem__(self,key):
    h=self.hashfunction(key)
    for idx, element in enumerate(self.array[h]):
      if element[0]==key:
        self.array[h].pop(idx)

a=hashtable()
a['hi']=10
a['i']=11
a['cj']=12
a['di']=13
a['ei']=14

a['hi']=23

a['hi']

a.array

